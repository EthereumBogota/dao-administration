/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ScrollPaymentBridge,
  ScrollPaymentBridgeInterface,
} from "../ScrollPaymentBridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "scrollBrige",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
    ],
    name: "depositETHToScroll",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610118806100206000396000f3fe60806040526004361061001e5760003560e01c8063ad54cde614610023575b600080fd5b6100366100313660046100ca565b610038565b005b6040517fce0b63ce000000000000000000000000000000000000000000000000000000008152336004820152602481018390526044810182905273ffffffffffffffffffffffffffffffffffffffff84169063ce0b63ce90606401600060405180830381600087803b1580156100ad57600080fd5b505af11580156100c1573d6000803e3d6000fd5b50505050505050565b6000806000606084860312156100df57600080fd5b833573ffffffffffffffffffffffffffffffffffffffff8116811461010357600080fd5b9560208501359550604090940135939250505056";

type ScrollPaymentBridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ScrollPaymentBridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ScrollPaymentBridge__factory extends ContractFactory {
  constructor(...args: ScrollPaymentBridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<ScrollPaymentBridge> {
    return super.deploy(overrides || {}) as Promise<ScrollPaymentBridge>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ScrollPaymentBridge {
    return super.attach(address) as ScrollPaymentBridge;
  }
  override connect(signer: Signer): ScrollPaymentBridge__factory {
    return super.connect(signer) as ScrollPaymentBridge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ScrollPaymentBridgeInterface {
    return new utils.Interface(_abi) as ScrollPaymentBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ScrollPaymentBridge {
    return new Contract(address, _abi, signerOrProvider) as ScrollPaymentBridge;
  }
}
