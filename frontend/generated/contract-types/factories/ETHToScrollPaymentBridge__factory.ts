/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ETHToScrollPaymentBridge,
  ETHToScrollPaymentBridgeInterface,
} from "../ETHToScrollPaymentBridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
    ],
    name: "depositETHToScroll",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610118806100206000396000f3fe6080604052600436106100225760003560e01c8063ca7d00e41461002e57600080fd5b3661002957005b600080fd5b61004161003c3660046100d3565b610043565b005b6040517fce0b63ce0000000000000000000000000000000000000000000000000000000081523360048201523460248201526044810182905273ffffffffffffffffffffffffffffffffffffffff83169063ce0b63ce90606401600060405180830381600087803b1580156100b757600080fd5b505af11580156100cb573d6000803e3d6000fd5b505050505050565b600080604083850312156100e657600080fd5b823573ffffffffffffffffffffffffffffffffffffffff8116811461010a57600080fd5b94602093909301359350505056";

type ETHToScrollPaymentBridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ETHToScrollPaymentBridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ETHToScrollPaymentBridge__factory extends ContractFactory {
  constructor(...args: ETHToScrollPaymentBridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<ETHToScrollPaymentBridge> {
    return super.deploy(overrides || {}) as Promise<ETHToScrollPaymentBridge>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ETHToScrollPaymentBridge {
    return super.attach(address) as ETHToScrollPaymentBridge;
  }
  override connect(signer: Signer): ETHToScrollPaymentBridge__factory {
    return super.connect(signer) as ETHToScrollPaymentBridge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ETHToScrollPaymentBridgeInterface {
    return new utils.Interface(_abi) as ETHToScrollPaymentBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ETHToScrollPaymentBridge {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ETHToScrollPaymentBridge;
  }
}
